buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    android {
        useLibrary 'org.apache.http.legacy'
    }

    flavorDimensions "default"
    signingConfigs {
        config {
            keyAlias 'hfa experts'
            keyPassword 'googleandroid'
            storeFile file('C:/MyAndroidWorkSpace/HandyForAll New/HandForAllTasker New/HFA Experts.jks')
            storePassword 'googleandroid'
        }
    }
    def code = getVersionCode()

    defaultConfig {
        applicationId "com.hoperlady"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 20
        versionName "2.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        incremental true
    }

    productFlavors {

        production {
            //versionCode code
            //buildConfigField "String", "SERVER_URL", '"http://192.168.0.158:9022/"'

            buildConfigField "String", "SERVER_URL", '"https://hoperrush.casperon.co/"'

            buildConfigField "String", "App_Name", '"Hoper Lady"'
            manifestPlaceholders = [appLabel: "Hoper Lady"]
        }

        /* If you are going to change the name of Flavor or add new Flavor in this file, make sure that did the same in library.build.gradle
        *  before making any changes here refer the RippleLibrary.build.gradle.
        *  And don't forget to add flavorDimensions "default" in library.build.gradle above the productFlavors */

        live {
            //versionCode code
           // buildConfigField "String", "SERVER_URL", '"http://192.168.0.158:9022/"'

            buildConfigField "String", "SERVER_URL", '"https://hoperrush.casperon.co/"'

            buildConfigField "String", "App_Name", '"Hoper Lady"'
            manifestPlaceholders = [appLabel: "Hoper Lady"]
        }

        staging {
            //versionCode code
            applicationIdSuffix ".staging"
           // buildConfigField "String", "SERVER_URL", '"http://192.168.0.158:9022/"'

            buildConfigField "String", "SERVER_URL", '"https://hoperrush.casperon.co/"'

            buildConfigField "String", "App_Name", '"Hoper Lady"'
            manifestPlaceholders = [appLabel: "Hoper Lady"]
        }

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

def getVersionCode() {
    def propertiesFile = file('version.properties')

    if (!propertiesFile.canRead()) {
        throw new GradleException("Could not read " + propertiesFile.name)
    }

    Properties properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))

    def code = properties['VERSION_CODE'].toInteger()

    gradle.taskGraph.whenReady { tasksGraph ->
        List<Task> tasks = tasksGraph.getAllTasks()

        for (Task task : tasks) {
            if (task.name.contains("Production")) {
                code = code + 1
                properties['VERSION_CODE'] = code.toString()
                properties.store(propertiesFile.newWriter(), null)
                break
            }
        }
    }

    return code
}

//def getVersionName() {
//    def propertiesFile = file('version.properties')
//
//    if (!propertiesFile.canRead()) {
//        throw new GradleException("Could not read " + propertiesFile.name)
//    }
//
//    Properties properties = new Properties()
//    properties.load(new FileInputStream(propertiesFile))
//
//    def code = properties['VERSION_NAME'].toString()
//
//    gradle.taskGraph.whenReady { tasksGraph ->
//        List<Task> tasks = tasksGraph.getAllTasks()
//
//        for (Task task : tasks) {
//            if (task.name.contains("Production")) {
////                code = (code + 0.01).toString()
//                properties['VERSION_NAME'] = code.toString()
//                properties.store(propertiesFile.newWriter(), null)
//                break
//            }
//        }
//    }
//
//    return code
//}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':RippleLibrary')
    implementation project(':Connection')
    implementation project(':CountryCodePicker')
    implementation 'com.facebook.android:facebook-android-sdk:4.7.0'
    implementation 'com.google.android.gms:play-services:11.0.4'
    implementation 'com.google.android.gms:play-services-maps:11.0.4'
    implementation 'com.google.android.gms:play-services-location:11.0.4'
    implementation 'com.google.android.gms:play-services-places:11.0.4'
    implementation 'com.google.firebase:firebase-messaging:11.0.4'
    implementation 'me.drakeet.materialdialog:library:1.3.1'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.github.paolorotolo:expandableheightlistview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.yalantis:sidemenu:1.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.PhilJay:MPAndroidChart:v2.0.9'
    implementation 'com.pkmmte.view:circularimageview:1.1'
    implementation 'com.roomorama:caldroid:2.3.1'
    implementation 'net.hockeyapp.android:HockeySDK:3.5.0'
    implementation 'com.wang.avi:library:1.0.1'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.github.javiersantos:BottomDialogs:1.2'
    implementation('cn.trinea.android.view.autoscrollviewpager:android-auto-scroll-view-pager:1.1.2') {
        exclude module: 'support-v4'
    }
    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.nightonke:jellytogglebutton:1.0.2'
    implementation 'com.yalantis:ucrop:2.2.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.jaredrummler:material-spinner:1.1.0'
    implementation 'com.eyalbira.loadingdots:loading-dots:1.0.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5'
    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'com.jaredrummler:material-spinner:1.1.0'
    implementation 'com.github.jd-alexander:library:1.1.0'
    implementation 'com.github.siyamed:android-shape-imageview:0.9.+@aar'
    implementation 'com.wdullaer:materialdatetimepicker:3.0.0'
//    compile 'com.wdullaer:materialdatetimepicker:4.1.0'
    implementation 'id.zelory:compressor:1.0.4'
    /* compile('io.socket:socket.io-client:0.8.3') { exclude group: 'org.json', module: 'json' }*/
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    configurations {
        implementation.exclude group: "org.apache.httpcomponents", module: "httpclient"
    }
    implementation 'com.google.code.gson:gson:2.5'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.11'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'me.piruin:quickaction:2.4.3'
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true;
    }
    implementation 'com.github.mukeshsolanki:android-otpview-pinview:2.1.0'

}
apply plugin: 'com.google.gms.google-services'

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
